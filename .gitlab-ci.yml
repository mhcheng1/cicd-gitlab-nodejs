image: node:14-alpine
stages:
  # - npm
  # - test
  - build
  - release

# npm:
#   stage: npm
#   script:
#     - npm install
#   cache:
#     paths:
#       - node_modules/
#   artifacts:
#     paths:
#       - node_modules/

# run-test:
#   stage: test
#   dependencies:
#     - npm
#   script:
#     - npm test

# docker-build:
#   image: docker:latest
#   stage: build
#   services:
#     - docker:dind
#   before_script:
#     - echo $CI_BUILD_TOKEN | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
#   script:
#     - docker build --pull -t "$CI_REGISTRY_IMAGE" .
#     - docker push "$CI_REGISTRY_IMAGE"

build_image_buildah:
  image: registry.gitlab.com/majorhayden/container-buildah
  stage: build
  variables:
    STORAGE_DRIVER: "vfs"
    BUILDAH_FORMAT: "docker"
  before_script:
    - dnf install -y nodejs
    - curl https://cli-assets.heroku.com/install.sh | sh
    - sed -i '/^mountopt =.*/d' /etc/containers/storage.conf
  script:
    - buildah bud --iidfile iidfile -t cicd-nodejsapp:$CI_COMMIT_SHORT_SHA .
    - buildah push --creds=_:$(heroku auth:token) $(cat iidfile) registry.heroku.com/cicd-nodejsapp/web

release:
  only:
    - master
  image: node:10.17-alpine
  stage: release
  before_script:
    - apk add curl bash
    - curl https://cli-assets.heroku.com/install.sh | sh
  script:
    - heroku container:release -a cicd-nodejsapp web